// This is part of Polish PKP Set 2.0 NewGRF.
// Don't include any headers inside this file!
// (c) Tadeusz Domagalski, licence: GPLv2

/* Eaos sprites */
spriteset(sset_eanos_old_purchase, "gfx/wagons/415w.png")       { tmpl_sprite_purchase(4, 100) }
spriteset(sset_eanos_new_purchase, "gfx/wagons/415w.png")       { tmpl_sprite_purchase(4, 120) }
spriteset(sset_eanos_old_empty, "gfx/wagons/415w.png")          { tmpl_sprite_train10(4, 20) }
spriteset(sset_eanos_new_empty, "gfx/wagons/415w.png")          { tmpl_sprite_train10(4, 60) }
spriteset(sset_eanos_old_half, "gfx/wagons/415w.png")           { tmpl_sprite_train10(4, 140) }
spriteset(sset_eanos_new_half, "gfx/wagons/415w.png")           { tmpl_sprite_train10(4, 380) }
spriteset(sset_eanos_old_full, "gfx/wagons/415w.png")           { tmpl_sprite_train10(4, 180) }
spriteset(sset_eanos_new_full, "gfx/wagons/415w.png")           { tmpl_sprite_train10(4, 420) }
spriteset(sset_eanos_old_wood_half, "gfx/wagons/415w.png")      { tmpl_sprite_train10(4, 220) }
spriteset(sset_eanos_new_wood_half, "gfx/wagons/415w.png")      { tmpl_sprite_train10(4, 460) }
spriteset(sset_eanos_old_wood_full, "gfx/wagons/415w.png")      { tmpl_sprite_train10(4, 260) }
spriteset(sset_eanos_new_wood_full, "gfx/wagons/415w.png")      { tmpl_sprite_train10(4, 500) }
spriteset(sset_eanos_old_wdpr_half, "gfx/wagons/415w.png")      { tmpl_sprite_train10(4, 300) }
spriteset(sset_eanos_new_wdpr_half, "gfx/wagons/415w.png")      { tmpl_sprite_train10(4, 540) }
spriteset(sset_eanos_old_wdpr_full, "gfx/wagons/415w.png")      { tmpl_sprite_train10(4, 340) }
spriteset(sset_eanos_new_wdpr_full, "gfx/wagons/415w.png")      { tmpl_sprite_train10(4, 580) }

spritegroup sgroup_eanos_old {
    loaded:     [sset_eanos_old_empty, sset_eanos_old_half, sset_eanos_old_full];
    loading:    [sset_eanos_old_empty, sset_eanos_old_half, sset_eanos_old_full];
}
spritegroup sgroup_eanos_new {
    loaded:     [sset_eanos_new_empty, sset_eanos_new_half, sset_eanos_new_full];
    loading:    [sset_eanos_new_empty, sset_eanos_new_half, sset_eanos_new_full];
}
spritegroup sgroup_eanos_old_wood {
    loaded:     [sset_eanos_old_empty, sset_eanos_old_wood_half, sset_eanos_old_wood_full];
    loading:    [sset_eanos_old_empty, sset_eanos_old_wood_half, sset_eanos_old_wood_full];
}
spritegroup sgroup_eanos_new_wood {
    loaded:     [sset_eanos_new_empty, sset_eanos_new_wood_half, sset_eanos_new_wood_full];
    loading:    [sset_eanos_new_empty, sset_eanos_new_wood_half, sset_eanos_new_wood_full];
}
spritegroup sgroup_eanos_old_wdpr {
    loaded:     [sset_eanos_old_empty, sset_eanos_old_wdpr_half, sset_eanos_old_wdpr_full];
    loading:    [sset_eanos_old_empty, sset_eanos_old_wdpr_half, sset_eanos_old_wdpr_full];
}
spritegroup sgroup_eanos_new_wdpr {
    loaded:     [sset_eanos_new_empty, sset_eanos_new_wdpr_half, sset_eanos_new_wdpr_full];
    loading:    [sset_eanos_new_empty, sset_eanos_new_wdpr_half, sset_eanos_new_wdpr_full];
}

/* Eaos switches */
switch(FEAT_TRAINS, SELF, switch_eanos_articulated, extra_callback_info1) {
    1: return item_dummy_1;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}
#define IS_BLUE     build_year >= 2003
switch(FEAT_TRAINS, SELF, switch_eanos_purchase, IS_BLUE) {
    1: return sset_eanos_new_purchase;
    return sset_eanos_old_purchase;
}
switch(FEAT_TRAINS, SELF, switch_eanos_graphics, IS_BLUE) {
    1: return sgroup_eanos_new;
    return sgroup_eanos_old;
}
switch(FEAT_TRAINS, SELF, switch_eanos_wood, IS_BLUE) {
    1: return sgroup_eanos_new_wood;
    return sgroup_eanos_old_wood;
}
switch(FEAT_TRAINS, SELF, switch_eanos_wdpr, IS_BLUE) {
    1: return sgroup_eanos_new_wdpr;
    return sgroup_eanos_old_wdpr;
}
switch(FEAT_TRAINS, SELF, switch_eanos_capacity, cargo_type_in_veh) {
    WOOD: return 56;
    WDPR: return 56;
    return CB_FAILED;
}
switch(FEAT_TRAINS, SELF, switch_eanos_loading_speed, cargo_type_in_veh) {
    WOOD: return 6;
    WDPR: return 6;     // 8 ticks
    return CB_FAILED;   // 7 ticks
}
switch(FEAT_TRAINS, SELF, switch_eanos_speed, cargo_count) {
    1..66: return 100;
    0: return 120;
    return CB_FAILED;
}

/* Define the actual train */
item(FEAT_TRAINS, item_eanos) {
    property {
		/* common properties */
        name:                           string(STR_EANOS_NAME);
        climates_available:             PKP_CLIMATES; 
        introduction_date:              date(1994, 1, 1);
        vehicle_life:                   20;
        reliability_decay:              20;
        CARGO_NORMAL_OPEN_WAGON_DEFINITION
        loading_speed:                  8; 
        cost_factor:                    PURCHASE_COST_EANOS;
        running_cost_factor:            RUNNING_COST_CARGO_LARGE;
		/* train properties */
        sprite_id:                      SPRITE_ID_NEW_TRAIN;
        speed:                          100 km/h;
        misc_flags:                     bitmask(TRAIN_FLAG_AUTOREFIT);
        refit_cost:                     0;
        track_type:                     RAIL;
        power:                          0;
        running_cost_base:              RUNNING_COST_STEAM;
        cargo_capacity:                 66;
        weight:                         24 ton;
        length:                         8;
        visual_effect_and_powered:      visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 0, DISABLE_WAGON_POWER);
        bitmask_vehicle_info:           bitmask(VINFO_CARGO_WAGON);
    }

if(param_keep_old_vehs) {
    property {
        model_life:                     VEHICLE_NEVER_EXPIRES;
    }
} else {
    property {
        model_life:                     45;
        retire_early:                   16;
    }
}

    graphics {
        WOOD:                       switch_eanos_wood;
        WDPR:                       switch_eanos_wdpr;
        purchase:                   switch_eanos_purchase;
        additional_text:            return string(STR_PURCHASE_DESCR_2L, string(STR_BRAKE_AIR), string(STR_CAPACITY_NON_FRIABLE));
        default:                    switch_eanos_graphics;
        purchase_cargo_capacity:    return CB_FAILED;
        cargo_capacity:             switch_eanos_capacity;
        loading_speed:              switch_eanos_loading_speed;
        speed:                      switch_eanos_speed;
        colour_mapping:             switch_bulk_recolour;
        articulated_part:           switch_eanos_articulated;
    }
}
